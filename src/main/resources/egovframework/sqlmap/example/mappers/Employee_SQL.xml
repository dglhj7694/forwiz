<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.sample.service.impl.EmployeeMapper">

	<resultMap id="employee" type="egovframework.example.sample.service.EmployeeVO">
		<result property="emp_No" column="EMP_No"/>
		<result property="emp_Name" column="EMP_Name"/>
		<result property="emp_Addr" column="EMP_Addr"/>
		<result property="emp_Birth" column="EMP_Birth"/>
		<result property="emp_Gen" column="EMP_Gen"/>
		<result property="emp_JoinDT" column= "EMP_JoinDT"/>
		<result property="emp_Phone" column="EMP_Phone"/>
		<result property="emp_Tel" column="EMP_Tel"/>
		<result property="emp_Dept" column="EMP_Dept"/>
		<result property="emp_Position" column="EMP_Position"/>
		<result property="emp_Email" column="EMP_Email"/>
		<result property="emp_Id" column="EMP_ID"/>
		<result property="emp_Pw" column="EMP_PW"/>
		<result property="emp_Pwck" column="EMP_PWck"/>
	</resultMap>

	<insert id="insertEmployee" parameterType="EmployeeVO">

			INSERT INTO EMPLOYEE
				( EMP_No
				  , EMP_Name
				  , EMP_Addr
				  , EMP_Birth
				  , EMP_Gen
				  , EMP_JoinDT
				  , EMP_Phone
				  , EMP_Tel
				  , EMP_Dept
				  , EMP_Position
				  , EMP_Email
				  , EMP_ID
				  , EMP_PW
				  , EMP_PWck
				   )
			VALUES ( #{emp_No}
				  , #{emp_Name}
				  , #{emp_Addr}
				  , #{emp_Birth}
				  , #{emp_Gen} 
				  , #{emp_JoinDT} 
				  , #{emp_Phone} 
				  , #{emp_Tel} 
				  , #{emp_Dept} 
				  , #{emp_Position} 
				  , #{emp_Email} 
				  , #{emp_Id} 
				  , #{emp_Pw}  
				  , #{emp_Pwck}  
				  )

	</insert>

	<update id="updateEmployee">

			UPDATE EMPLOYEE
			SET EMP_No=#{emp_No}
			, EMP_Name=#{emp_Name}
				  , EMP_Addr=#{emp_Addr}
				  , EMP_Birth=#{emp_Birth}
				  , EMP_Gen=#{emp_Gen} 
				  , EMP_JoinDT=#{emp_JoinDT} 
				  , EMP_Phone=#{emp_Phone} 
				  , EMP_Tel=#{emp_Tel} 
				  , EMP_Dept=#{emp_Dept} 
				  , EMP_Position=#{emp_Position} 
				  , EMP_Email=#{emp_Email} 
				  , EMP_ID=#{emp_Id} 
				  , EMP_PW=#{emp_Pw} 
				  , EMP_PWck=#{emp_Pwck} 
				  WHERE EMP_No=#{emp_No}

	</update>

	<delete id="deleteEmployee">

			DELETE FROM EMPLOYEE
			WHERE EMP_No=#{emp_No}

	</delete>

	<select id="selectEmployee" resultMap="employee">

			SELECT
				EMP_No, EMP_ID, EMP_PW, EMP_PWck, EMP_Name, EMP_Addr, EMP_Birth, EMP_Dept, EMP_Gen, EMP_Position, EMP_JoinDT, EMP_Email, EMP_Phone, EMP_Tel
			FROM EMPLOYEE
			WHERE EMP_No=#{emp_No}

	</select>

	<select id="selectEmployeeList" parameterType="searchVO" resultType="egovMap">

			SELECT
				EMP_No, EMP_ID, EMP_Name, EMP_Dept, EMP_Position, EMP_Email, EMP_Phone
			FROM EMPLOYEE
			WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 0">
						AND   EMP_No LIKE CONCAT('%', #{searchKeyword},'%')
					</when>
		            <when test="searchCondition == 1">
						AND   EMP_Name LIKE CONCAT('%', #{searchKeyword},'%')
					</when>
				</choose>
			</if>


	ORDER BY EMP_No ASC
	LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>

	<select id="selectEmployeeListTotCnt" parameterType="searchVO" resultType="int">

			SELECT COUNT(*) totcnt
			FROM EMPLOYEE
			WHERE 1=1
			<if test="searchKeyword != null and searchKeyword != ''">
		        <choose>
		            <when test="searchCondition == 0">
						AND   EMP_No LIKE CONCAT('%', #{searchKeyword},'%')
					</when>
		            <when test="searchCondition == 1">
						AND   EMP_Name LIKE CONCAT('%', #{searchKeyword},'%')
					</when>
				</choose>
			</if>
	</select>

</mapper>